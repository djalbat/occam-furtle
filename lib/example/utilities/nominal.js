"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    nominalLexerFromNothing: function() {
        return nominalLexerFromNothing;
    },
    nominalParserFromNothing: function() {
        return nominalParserFromNothing;
    }
});
var _occamcustomgrammars = require("occam-custom-grammars");
var _grammar = require("../utilities/grammar");
var nominalLexerFromCombinedCustomGrammar = _occamcustomgrammars.lexersUtilities.nominalLexerFromCombinedCustomGrammar, nominalParserFromStartRuleNameAndCombinedCustomGrammar = _occamcustomgrammars.parsersUtilities.nominalParserFromStartRuleNameAndCombinedCustomGrammar;
var combinedCustomGrammar = (0, _grammar.combinedCustomGrammarFromNothing)();
function nominalLexerFromNothing() {
    var nominalLexer = nominalLexerFromCombinedCustomGrammar(combinedCustomGrammar);
    return nominalLexer;
}
function nominalParserFromNothing() {
    var startRuleName = "statement", nominalParser = nominalParserFromStartRuleNameAndCombinedCustomGrammar(startRuleName, combinedCustomGrammar);
    return nominalParser;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9leGFtcGxlL3V0aWxpdGllcy9ub21pbmFsLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgeyBsZXhlcnNVdGlsaXRpZXMsIHBhcnNlcnNVdGlsaXRpZXMgfSBmcm9tIFwib2NjYW0tY3VzdG9tLWdyYW1tYXJzXCI7XG5cbmltcG9ydCB7IGNvbWJpbmVkQ3VzdG9tR3JhbW1hckZyb21Ob3RoaW5nIH0gZnJvbSBcIi4uL3V0aWxpdGllcy9ncmFtbWFyXCI7XG5cbmNvbnN0IHsgbm9taW5hbExleGVyRnJvbUNvbWJpbmVkQ3VzdG9tR3JhbW1hciB9ID0gbGV4ZXJzVXRpbGl0aWVzLFxuICAgICAgeyBub21pbmFsUGFyc2VyRnJvbVN0YXJ0UnVsZU5hbWVBbmRDb21iaW5lZEN1c3RvbUdyYW1tYXIgfSA9IHBhcnNlcnNVdGlsaXRpZXM7XG5cbmNvbnN0IGNvbWJpbmVkQ3VzdG9tR3JhbW1hciA9IGNvbWJpbmVkQ3VzdG9tR3JhbW1hckZyb21Ob3RoaW5nKCk7XG5cbmV4cG9ydCBmdW5jdGlvbiBub21pbmFsTGV4ZXJGcm9tTm90aGluZygpIHtcbiAgY29uc3Qgbm9taW5hbExleGVyID0gbm9taW5hbExleGVyRnJvbUNvbWJpbmVkQ3VzdG9tR3JhbW1hcihjb21iaW5lZEN1c3RvbUdyYW1tYXIpO1xuXG4gIHJldHVybiBub21pbmFsTGV4ZXI7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBub21pbmFsUGFyc2VyRnJvbU5vdGhpbmcoKSB7XG4gIGNvbnN0IHN0YXJ0UnVsZU5hbWUgPSBcInN0YXRlbWVudFwiLFxuICAgICAgICBub21pbmFsUGFyc2VyID0gbm9taW5hbFBhcnNlckZyb21TdGFydFJ1bGVOYW1lQW5kQ29tYmluZWRDdXN0b21HcmFtbWFyKHN0YXJ0UnVsZU5hbWUsIGNvbWJpbmVkQ3VzdG9tR3JhbW1hcik7XG5cbiAgcmV0dXJuIG5vbWluYWxQYXJzZXI7XG59XG4iXSwibmFtZXMiOlsibm9taW5hbExleGVyRnJvbU5vdGhpbmciLCJub21pbmFsUGFyc2VyRnJvbU5vdGhpbmciLCJub21pbmFsTGV4ZXJGcm9tQ29tYmluZWRDdXN0b21HcmFtbWFyIiwibGV4ZXJzVXRpbGl0aWVzIiwibm9taW5hbFBhcnNlckZyb21TdGFydFJ1bGVOYW1lQW5kQ29tYmluZWRDdXN0b21HcmFtbWFyIiwicGFyc2Vyc1V0aWxpdGllcyIsImNvbWJpbmVkQ3VzdG9tR3JhbW1hciIsImNvbWJpbmVkQ3VzdG9tR3JhbW1hckZyb21Ob3RoaW5nIiwibm9taW5hbExleGVyIiwic3RhcnRSdWxlTmFtZSIsIm5vbWluYWxQYXJzZXIiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7OztJQVdnQkEsdUJBQXVCO2VBQXZCQTs7SUFNQUMsd0JBQXdCO2VBQXhCQTs7O21DQWZrQzt1QkFFRDtBQUVqRCxJQUFNLEFBQUVDLHdDQUEwQ0Msb0NBQWUsQ0FBekRELHVDQUNGLEFBQUVFLHlEQUEyREMscUNBQWdCLENBQTNFRDtBQUVSLElBQU1FLHdCQUF3QkMsSUFBQUEseUNBQWdDO0FBRXZELFNBQVNQO0lBQ2QsSUFBTVEsZUFBZU4sc0NBQXNDSTtJQUUzRCxPQUFPRTtBQUNUO0FBRU8sU0FBU1A7SUFDZCxJQUFNUSxnQkFBZ0IsYUFDaEJDLGdCQUFnQk4sdURBQXVESyxlQUFlSDtJQUU1RixPQUFPSTtBQUNUIn0=