"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "nominalFileContextFromReleaseContext", {
    enumerable: true,
    get: function() {
        return nominalFileContextFromReleaseContext;
    }
});
var _occamcustomgrammars = require("occam-custom-grammars");
var _file = /*#__PURE__*/ _interop_require_default(require("../context/file"));
var _grammar = require("../utilities/grammar");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var nominalLexerFromCombinedCustomGrammar = _occamcustomgrammars.lexersUtilities.nominalLexerFromCombinedCustomGrammar, nominalParserFromStartRuleNameAndCombinedCustomGrammar = _occamcustomgrammars.parsersUtilities.nominalParserFromStartRuleNameAndCombinedCustomGrammar;
function nominalFileContextFromReleaseContext(releaseContext) {
    var content = "âˆ€n n = n", startRuleName = "statement", combinedCustomGrammar = (0, _grammar.combinedCustomGrammarFromNothing)(), nominalLexer = nominalLexerFromCombinedCustomGrammar(combinedCustomGrammar), nominalParser = nominalParserFromStartRuleNameAndCombinedCustomGrammar(startRuleName, combinedCustomGrammar), lexer = nominalLexer, parser = nominalParser, tokens = lexer.tokenise(content), node = parser.parse(tokens), fileContext = _file.default.fromNodeAndTokens(node, tokens, releaseContext), nominalFileContext = fileContext; ///
    return nominalFileContext;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9leGFtcGxlL3V0aWxpdGllcy9ub21pbmFsLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgeyBsZXhlcnNVdGlsaXRpZXMsIHBhcnNlcnNVdGlsaXRpZXMgfSBmcm9tIFwib2NjYW0tY3VzdG9tLWdyYW1tYXJzXCI7XG5cbmltcG9ydCBGaWxlQ29udGV4dCBmcm9tIFwiLi4vY29udGV4dC9maWxlXCI7XG5cbmltcG9ydCB7IGNvbWJpbmVkQ3VzdG9tR3JhbW1hckZyb21Ob3RoaW5nIH0gZnJvbSBcIi4uL3V0aWxpdGllcy9ncmFtbWFyXCI7XG5cbmNvbnN0IHsgbm9taW5hbExleGVyRnJvbUNvbWJpbmVkQ3VzdG9tR3JhbW1hciB9ID0gbGV4ZXJzVXRpbGl0aWVzLFxuICAgICAgeyBub21pbmFsUGFyc2VyRnJvbVN0YXJ0UnVsZU5hbWVBbmRDb21iaW5lZEN1c3RvbUdyYW1tYXIgfSA9IHBhcnNlcnNVdGlsaXRpZXM7XG5cbmV4cG9ydCBmdW5jdGlvbiBub21pbmFsRmlsZUNvbnRleHRGcm9tUmVsZWFzZUNvbnRleHQocmVsZWFzZUNvbnRleHQpIHtcbiAgY29uc3QgY29udGVudCA9IGDiiIBuIG4gPSBuYCxcbiAgICAgICAgc3RhcnRSdWxlTmFtZSA9IFwic3RhdGVtZW50XCIsXG4gICAgICAgIGNvbWJpbmVkQ3VzdG9tR3JhbW1hciA9IGNvbWJpbmVkQ3VzdG9tR3JhbW1hckZyb21Ob3RoaW5nKCksXG4gICAgICAgIG5vbWluYWxMZXhlciA9IG5vbWluYWxMZXhlckZyb21Db21iaW5lZEN1c3RvbUdyYW1tYXIoY29tYmluZWRDdXN0b21HcmFtbWFyKSxcbiAgICAgICAgbm9taW5hbFBhcnNlciA9IG5vbWluYWxQYXJzZXJGcm9tU3RhcnRSdWxlTmFtZUFuZENvbWJpbmVkQ3VzdG9tR3JhbW1hcihzdGFydFJ1bGVOYW1lLCBjb21iaW5lZEN1c3RvbUdyYW1tYXIpLFxuICAgICAgICBsZXhlciA9IG5vbWluYWxMZXhlciwgLy8vXG4gICAgICAgIHBhcnNlciA9IG5vbWluYWxQYXJzZXIsIC8vL1xuICAgICAgICB0b2tlbnMgPSBsZXhlci50b2tlbmlzZShjb250ZW50KSxcbiAgICAgICAgbm9kZSA9IHBhcnNlci5wYXJzZSh0b2tlbnMpLFxuICAgICAgICBmaWxlQ29udGV4dCA9IEZpbGVDb250ZXh0LmZyb21Ob2RlQW5kVG9rZW5zKG5vZGUsIHRva2VucywgcmVsZWFzZUNvbnRleHQpLFxuICAgICAgICBub21pbmFsRmlsZUNvbnRleHQgPSBmaWxlQ29udGV4dDsgIC8vL1xuXG4gIHJldHVybiBub21pbmFsRmlsZUNvbnRleHQ7XG59XG4iXSwibmFtZXMiOlsibm9taW5hbEZpbGVDb250ZXh0RnJvbVJlbGVhc2VDb250ZXh0Iiwibm9taW5hbExleGVyRnJvbUNvbWJpbmVkQ3VzdG9tR3JhbW1hciIsImxleGVyc1V0aWxpdGllcyIsIm5vbWluYWxQYXJzZXJGcm9tU3RhcnRSdWxlTmFtZUFuZENvbWJpbmVkQ3VzdG9tR3JhbW1hciIsInBhcnNlcnNVdGlsaXRpZXMiLCJyZWxlYXNlQ29udGV4dCIsImNvbnRlbnQiLCJzdGFydFJ1bGVOYW1lIiwiY29tYmluZWRDdXN0b21HcmFtbWFyIiwiY29tYmluZWRDdXN0b21HcmFtbWFyRnJvbU5vdGhpbmciLCJub21pbmFsTGV4ZXIiLCJub21pbmFsUGFyc2VyIiwibGV4ZXIiLCJwYXJzZXIiLCJ0b2tlbnMiLCJ0b2tlbmlzZSIsIm5vZGUiLCJwYXJzZSIsImZpbGVDb250ZXh0IiwiRmlsZUNvbnRleHQiLCJmcm9tTm9kZUFuZFRva2VucyIsIm5vbWluYWxGaWxlQ29udGV4dCJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7K0JBV2dCQTs7O2VBQUFBOzs7bUNBVGtDOzJEQUUxQjt1QkFFeUI7Ozs7OztBQUVqRCxJQUFNLEFBQUVDLHdDQUEwQ0Msb0NBQWUsQ0FBekRELHVDQUNGLEFBQUVFLHlEQUEyREMscUNBQWdCLENBQTNFRDtBQUVELFNBQVNILHFDQUFxQ0ssY0FBYztJQUNqRSxJQUFNQyxVQUFXLFlBQ1hDLGdCQUFnQixhQUNoQkMsd0JBQXdCQyxJQUFBQSx5Q0FBZ0MsS0FDeERDLGVBQWVULHNDQUFzQ08sd0JBQ3JERyxnQkFBZ0JSLHVEQUF1REksZUFBZUMsd0JBQ3RGSSxRQUFRRixjQUNSRyxTQUFTRixlQUNURyxTQUFTRixNQUFNRyxRQUFRLENBQUNULFVBQ3hCVSxPQUFPSCxPQUFPSSxLQUFLLENBQUNILFNBQ3BCSSxjQUFjQyxhQUFXLENBQUNDLGlCQUFpQixDQUFDSixNQUFNRixRQUFRVCxpQkFDMURnQixxQkFBcUJILGFBQWMsR0FBRztJQUU1QyxPQUFPRztBQUNUIn0=